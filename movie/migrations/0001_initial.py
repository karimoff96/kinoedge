# Generated by Django 4.2 on 2023-05-05 17:05

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import movie.models
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('brief_info', models.CharField(max_length=300)),
                ('birth_place', models.CharField(max_length=255)),
                ('citizenship', django_countries.fields.CountryField(max_length=2)),
                ('career', models.CharField(max_length=50)),
                ('information', models.TextField()),
            ],
            options={
                'verbose_name': 'Actor',
                'verbose_name_plural': 'Actors',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=movie.models.get_image_upload_path)),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'Major',
                'verbose_name_plural': 'Majors',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('production_year', models.DateField()),
                ('country', django_countries.fields.CountryField(max_length=746, multiple=True)),
                ('screenwriter', models.CharField(max_length=255)),
                ('producer', models.CharField(max_length=255)),
                ('composer', models.CharField(max_length=255)),
                ('artist', models.CharField(max_length=255)),
                ('montage', models.CharField(max_length=255)),
                ('world_premier_date', models.DateField()),
                ('world_rating', models.CharField(choices=[('5', '5'), ('4', '4'), ('3', '3'), ('2', '2'), ('1', '1')], default=2, max_length=20)),
                ('duration', models.IntegerField(default=0)),
                ('brief_information', models.TextField()),
                ('trailer', models.FileField(upload_to='media/movie/trailes/')),
                ('logo', models.ImageField(upload_to='images/movie/logo/%d')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('age_limit', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'Movie',
                'verbose_name_plural': 'Movies',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('publication_date', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'News',
                'verbose_name_plural': 'News',
            },
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('founder_name', models.CharField(max_length=255)),
                ('location', django_countries.fields.CountryField(max_length=2)),
                ('product_types', multiselectfield.db.fields.MultiSelectField(choices=[('Movie', 'Movie'), ('Short', 'Shorts'), ('Series', 'Series'), ('Cartoon', 'Cartoons'), ('Anime', 'Animes'), ('Music', 'Musics'), ('Premier', 'Premiers')], max_length=7)),
                ('employee_count', models.IntegerField(default=1)),
                ('profit', models.CharField(max_length=255)),
                ('capital', models.CharField(max_length=255)),
                ('page', models.CharField(max_length=255)),
                ('history', models.TextField()),
                ('video', models.FileField(null=True, upload_to='media/studio/video/%Y/%m/%d')),
                ('logo', models.ImageField(null=True, upload_to='images/studio/logo/')),
                ('award', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Studio',
                'verbose_name_plural': 'Studios',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['name'], name='movie_tag_name_4e43ec_idx'),
        ),
        migrations.AddField(
            model_name='studio',
            name='news',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.news'),
        ),
        migrations.AddField(
            model_name='news',
            name='tag',
            field=models.ManyToManyField(to='movie.tag'),
        ),
        migrations.AddField(
            model_name='movie',
            name='cast',
            field=models.ManyToManyField(to='movie.actor'),
        ),
        migrations.AddField(
            model_name='movie',
            name='category',
            field=models.ManyToManyField(to='movie.category'),
        ),
        migrations.AddField(
            model_name='movie',
            name='genre',
            field=models.ManyToManyField(to='movie.genre'),
        ),
        migrations.AddField(
            model_name='movie',
            name='studio',
            field=models.ManyToManyField(to='movie.studio'),
        ),
        migrations.AddField(
            model_name='movie',
            name='tag',
            field=models.ManyToManyField(to='movie.tag'),
        ),
        migrations.AddIndex(
            model_name='major',
            index=models.Index(fields=['name'], name='movie_major_name_426b6d_idx'),
        ),
        migrations.AddField(
            model_name='image',
            name='actor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movie.actor'),
        ),
        migrations.AddField(
            model_name='image',
            name='movie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movie.movie'),
        ),
        migrations.AddField(
            model_name='image',
            name='news',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movie.news'),
        ),
        migrations.AddField(
            model_name='image',
            name='studio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='movie.studio'),
        ),
        migrations.AddIndex(
            model_name='genre',
            index=models.Index(fields=['name'], name='movie_genre_name_8c5718_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name'], name='movie_categ_name_2dd668_idx'),
        ),
        migrations.AddField(
            model_name='actor',
            name='genre',
            field=models.ManyToManyField(to='movie.genre'),
        ),
        migrations.AddField(
            model_name='actor',
            name='status',
            field=models.ManyToManyField(to='movie.major'),
        ),
        migrations.AddIndex(
            model_name='studio',
            index=models.Index(fields=['name'], name='movie_studi_name_1f43ba_idx'),
        ),
        migrations.AddIndex(
            model_name='news',
            index=models.Index(fields=['title'], name='movie_news_title_0c923c_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['title'], name='movie_movie_title_0a2a49_idx'),
        ),
        migrations.AddIndex(
            model_name='actor',
            index=models.Index(fields=['name'], name='movie_actor_name_5e0ddc_idx'),
        ),
    ]
